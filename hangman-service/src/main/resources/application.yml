spring:
  kafka:
    bootstrap-server: localhost:9092
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: hangman.util.GameRecordDeserializer
      properties:
        spring.json.trusted.packages: "*, hangman.dto, hangman.dto.*"
        default.deserialization.exception.handler: org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: hangman.util.GameRecordSerializer
      properties:
        spring.kafka.producer.properties.spring.json.type.mapping: gameRecord:hangman.dto.GameRecord,gameRecord:aggregation.dto.GameRecord
  jpa:
    generate-ddl: 'true'
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        #dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: 'TRUE'
    hibernate:
      ddl-auto: validate
  application:
    name: hangman-service
  flyway:
    baseline-on-migrate: 'true'
  datasource:
    password: root
    #username: postgres
    username: root
    url: jdbc:mysql://localhost:3306/social_gaming_platform_hangman_service?useSSL=false&createDatabaseIfNotExist=true
    #url: jdbc:postgresql://localhost:5432/social_gaming_platform_hangman_service?useSSL=false&createDatabaseIfNotExist=true


server:
  port: '8082'

#flyway:
#  locations: filesystem:db/migration
#  url: jdbc:mysql://localhost:3306/mysql
#  user: root
#  schemas: social_gaming_platform_hangman_service
#  password: root

eureka:
    client:
        service-url:
            defaultZone: http://localhost:8761/eureka
        fetch-registry: true
        register-with-eureka: true
        enabled: true